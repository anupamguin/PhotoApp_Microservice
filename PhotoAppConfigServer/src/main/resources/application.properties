spring.application.name=PhotoAppConfigServer
server.port=8011


# For Configuration properties we have to create private Git Repository named PhotoAppConfiguration
# where every properties are there or can use Native File

spring.profiles.active=native
# from where get the properties if we use native file then active=native , if we use git then active=git AND If we use native file & git both then active=native,git

# if spring.profiles.active=native then this native file information
# spring.cloud.config.server.native.search-locations=file://${user.home}/Desktop/PhotoAppMicroservice/PhotoAppLocalConfiguration
spring.cloud.config.server.native.search-locations=file://${user.dir}/../PhotoAppLocalConfiguration

#     After adding native we can check the properties in ->
#	  http://localhost:8011/PhotoAppConfigServer/native    here we can see the local properties 



## if spring.profiles.active=git then this is the git information

#spring.profiles.active=git
#spring.cloud.config.server.git.uri=https://github.com/anupamguin/PhotoAppConfiguration
#spring.cloud.config.server.git.username=anupamguin7585@gmail.com
#spring.cloud.config.server.git.password=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
#spring.cloud.config.server.git.clone-on-start=true
## This above flag indicates that the above Repository be cloned at startup
#spring.cloud.config.server.git.default-label=main
## new version of Git by default Branch is main


##########################
# If We change properties in Git Repo or Local File then those properties we have to broadcast in the microservices.
# so that we have hit the POST API -> http://localhost:8011/actuator/busrefresh



management.endpoints.web.exposure.include=busrefresh
# this will enable us to bus refresh url end point for our config server and we will be able to send the post
# request to this Web service endpoint so that we can trigger the refresh of our application configuration.


######################################
#  Connection Credentials for RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
